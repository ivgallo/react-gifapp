{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAgCeA,EA7BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACE,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAfpB,SAAEP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAY,WACRxB,EAAUC,GAAWwB,MAAM,SAAAC,GAAI,OAAIC,YAAY,WAE1CJ,EAAS,CACDf,KAAMkB,EACNL,SAAS,MAEd,UAEV,CAACpB,IAGIqB,EDf0BM,CAAc3B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACV,qBAAKA,UAAU,YAAf,SAEUH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADAA,EAAIC,aEbxBiB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,cADhB,mBACvB2C,EADuB,KACX5C,EADW,KAG9B,OACI,qCACG,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEQ4C,EAAWpB,KAAK,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,SAAWA,GADHA,U,MCThC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b9e54d4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = ( e ) => {\n       setInputValue(e.target.value)     \n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if ( inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats])\n            setInputValue('')     \n        }\n        \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={ inputValue } onChange={handleInputChange}/>\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n\n","\nexport const getGifts = async( category ) => {\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nWZA0k1Fzn15b8GXjcrphQFjvAYMMVsc`\n    const resp = await fetch( url )\n    const { data } = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n   \n    return gifs\n\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs( category )\n    \n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n        { <div className=\"card-grid\">\n                {\n                    images.map( ( img ) => (\n                        <GifGridItem \n                            key={img.id} \n                            { ...img }\n                        />\n                    ))\n                }\n        </div> \n        }\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport { getGifts } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect ( () => {\n        getGifts( category ).then( imgs => setTimeout( () => {\n\n             setState({\n                     data: imgs,\n                     loading: false\n                 })\n             }, 3000)\n        )\n   }, [category])\n\n    \n    return state\n}","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch'])\n    \n    return (\n        <>\n           <h2>Gif Expert App</h2> \n           <AddCategory setCategories= {setCategories}/>\n           <hr />\n               {\n                   categories.map( (category) => (\n                      <GifGrid \n                        key = { category }\n                        category={ category } \n                      />\n                   ))\n               }\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}